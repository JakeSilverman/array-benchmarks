<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>/home/jake/ar_abs_temp_2023-07-08_04-33-51-930390602/violation.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(reach_error())) )</data>
  <data key="programfile">/home/jake/ar_abs_temp_2023-07-08_04-33-51-930390602/violation.c</data>
  <data key="programhash">de75eca733b1d7c99065aae4f066f4061c9b0ed223162d16b8c51a7aa4074d0b</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2023-07-08T04:33:59-04:00</data>
  <node id="A0">
   <data key="entry">true</data>
  </node>
  <node id="A6"/>
  <edge source="A0" target="A6">
   <data key="startline">13</data>
   <data key="endline">13</data>
   <data key="startoffset">352</data>
   <data key="endoffset">362</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A7"/>
  <edge source="A6" target="A7">
   <data key="startline">14</data>
   <data key="endline">14</data>
   <data key="startoffset">369</data>
   <data key="endoffset">373</data>
   <data key="assumption">x == (45);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A8"/>
  <edge source="A7" target="A8">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">416</data>
   <data key="endoffset">442</data>
   <data key="enterFunction">assume_abort_if_not</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A8" target="sink">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">187</data>
   <data key="endoffset">190</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A11"/>
  <edge source="A8" target="A11">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">187</data>
   <data key="endoffset">190</data>
   <data key="control">condition-false</data>
   <data key="assumption">cond == (1);</data>
   <data key="assumption.scope">assume_abort_if_not</data>
  </edge>
  <node id="A13"/>
  <edge source="A11" target="A13">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">416</data>
   <data key="endoffset">444</data>
   <data key="returnFrom">assume_abort_if_not</data>
  </edge>
  <node id="A14"/>
  <edge source="A13" target="A14">
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">450</data>
   <data key="endoffset">474</data>
   <data key="enterFunction">__JVERIFIER_assert</data>
  </edge>
  <node id="A16">
   <data key="violation">true</data>
   <data key="violatedProperty">reach_error(); called in line 10</data>
  </node>
  <edge source="A14" target="A16">
   <data key="startline">9</data>
   <data key="endline">9</data>
   <data key="startoffset">311</data>
   <data key="endoffset">314</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__JVERIFIER_assert</data>
  </edge>
  <edge source="A14" target="sink">
   <data key="startline">9</data>
   <data key="endline">9</data>
   <data key="startoffset">311</data>
   <data key="endoffset">314</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>

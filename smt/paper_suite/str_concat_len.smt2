(set-info :original "/var/folders/xz/sgqbj6yn0yv_1mpy6_jqympm0000gn/T/sea-IAJs_d/str_concat_len.pp.ms.o.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry ())
(declare-rel main@_bb ())
(declare-rel main@_bb2 ())
(declare-rel main@len.exit10.i5.split ())
(declare-var main@%.pr1_0 Int )
(declare-var main@%_5_0 Bool )
(declare-var main@%sm1_0 (Array Int Int) )
(declare-var main@%_0_0 Int )
(declare-var main@%_2_0 Int )
(declare-var main@%.pr_0 Int )
(declare-var main@%_3_0 Bool )
(declare-var main@entry_0 Bool )
(declare-var main@%_1_0 Int )
(declare-var main@%sm_0 (Array Int Int) )
(declare-var main@entry.split_0 Bool )
(declare-var main@_bb_0 Bool )
(declare-var main@.split4_0 Bool )
(declare-var main@.split_0 Bool )
(declare-var main@_bb2_0 Bool )
(declare-var main@len.exit10.i5_0 Bool )
(declare-var main@len.exit10.i5.split_0 Bool )
(declare-var main@_bb_1 Bool )
(declare-var main@_bb2_1 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule main@entry)
(rule (let ((a!1 (= main@%_1_0 (+ (+ main@%_0_0 (* 0 0)) (* 0 1))))
      (a!2 (= main@%_2_0 (+ (+ main@%_0_0 (* 0 0)) (* (- 1) 1)))))
  (=> (and main@entry
           true
           (> main@%_0_0 0)
           a!1
           (or (<= main@%_0_0 0) (> main@%_1_0 0))
           a!2
           (or (<= main@%_0_0 0) (> main@%_2_0 0))
           (> main@%_0_0 0)
           (= main@%sm_0 (store main@%sm1_0 main@%_2_0 0))
           (= main@%.pr_0 (select main@%sm1_0 main@%_1_0))
           (= main@%_3_0 (= main@%.pr_0 0))
           (=> main@entry.split_0 (and main@entry.split_0 main@entry_0))
           (=> (and main@entry.split_0 main@entry_0) (not main@%_3_0))
           (=> main@_bb_0 (and main@_bb_0 main@entry.split_0))
           main@_bb_0)
      main@_bb)))
(rule (let ((a!1 (= main@%_1_0 (+ (+ main@%_0_0 (* 0 0)) (* 0 1))))
      (a!2 (= main@%_2_0 (+ (+ main@%_0_0 (* 0 0)) (* (- 1) 1)))))
(let ((a!3 (and main@entry
                true
                (> main@%_0_0 0)
                a!1
                (or (<= main@%_0_0 0) (> main@%_1_0 0))
                a!2
                (or (<= main@%_0_0 0) (> main@%_2_0 0))
                (> main@%_0_0 0)
                (= main@%sm_0 (store main@%sm1_0 main@%_2_0 0))
                (= main@%.pr_0 (select main@%sm1_0 main@%_1_0))
                (= main@%_3_0 (= main@%.pr_0 0))
                (=> main@.split4_0 (and main@.split4_0 main@entry_0))
                (=> (and main@.split4_0 main@entry_0) main@%_3_0)
                (=> main@.split4_0
                    (= main@%.pr1_0 (select main@%sm_0 main@%_1_0)))
                (=> main@.split4_0 (= main@%_5_0 (= main@%.pr1_0 0)))
                (=> main@.split_0 (and main@.split_0 main@.split4_0))
                (=> (and main@.split_0 main@.split4_0) (not main@%_5_0))
                (=> main@_bb2_0 (and main@_bb2_0 main@.split_0))
                main@_bb2_0)))
  (=> a!3 main@_bb2))))
(rule (let ((a!1 (= main@%_1_0 (+ (+ main@%_0_0 (* 0 0)) (* 0 1))))
      (a!2 (= main@%_2_0 (+ (+ main@%_0_0 (* 0 0)) (* (- 1) 1)))))
(let ((a!3 (and main@entry
                true
                (> main@%_0_0 0)
                a!1
                (or (<= main@%_0_0 0) (> main@%_1_0 0))
                a!2
                (or (<= main@%_0_0 0) (> main@%_2_0 0))
                (> main@%_0_0 0)
                (= main@%sm_0 (store main@%sm1_0 main@%_2_0 0))
                (= main@%.pr_0 (select main@%sm1_0 main@%_1_0))
                (= main@%_3_0 (= main@%.pr_0 0))
                (=> main@.split4_0 (and main@.split4_0 main@entry_0))
                (=> (and main@.split4_0 main@entry_0) main@%_3_0)
                (=> main@.split4_0
                    (= main@%.pr1_0 (select main@%sm_0 main@%_1_0)))
                (=> main@.split4_0 (= main@%_5_0 (= main@%.pr1_0 0)))
                (=> main@len.exit10.i5_0
                    (and main@len.exit10.i5_0 main@.split4_0))
                (=> (and main@len.exit10.i5_0 main@.split4_0) main@%_5_0)
                (=> main@len.exit10.i5_0 false)
                (=> main@len.exit10.i5.split_0
                    (and main@len.exit10.i5.split_0 main@len.exit10.i5_0))
                main@len.exit10.i5.split_0)))
  (=> a!3 main@len.exit10.i5.split))))
(rule (=> (and main@_bb true (=> main@_bb_1 (and main@_bb_1 main@_bb_0)) main@_bb_1)
    main@_bb))
(rule (=> (and main@_bb2
         true
         (=> main@_bb2_1 (and main@_bb2_1 main@_bb2_0))
         main@_bb2_1)
    main@_bb2))
(query main@len.exit10.i5.split)


(set-info :original "/var/folders/xz/sgqbj6yn0yv_1mpy6_jqympm0000gn/T/sea-EzPknj/sanfoundry_24-1.pp.ms.o.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel __JVERIFIER_assert@_call (Int ))
(declare-rel __JVERIFIER_assert@_ret (Int ))
(declare-rel __JVERIFIER_assert (Bool Bool Bool Int ))
(declare-rel printEven@_call (Int ))
(declare-rel printEven@.split (Int ))
(declare-rel printEven (Bool Bool Bool Int ))
(declare-rel printOdd@_call (Int ))
(declare-rel printOdd@.split (Int ))
(declare-rel printOdd (Bool Bool Bool Int ))
(declare-rel main@entry ())
(declare-rel main@_bb (Int Int (Array Int Int) Int ))
(declare-rel main@_bb4 (Int (Array Int Int) Int Int ))
(declare-rel main@_bb9 (Int (Array Int Int) Int Int ))
(declare-rel main@verifier.error.split ())
(declare-var __JVERIFIER_assert@%_call1_0 Bool )
(declare-var __JVERIFIER_assert@arg.0_0 Int )
(declare-var __JVERIFIER_assert@_call_0 Bool )
(declare-var __JVERIFIER_assert@_ret_0 Bool )
(declare-var printEven@%_3_0 Int )
(declare-var printEven@arg.0_0 Int )
(declare-var printEven@%_4_0 Bool )
(declare-var printEven@%_call1_0 Int )
(declare-var printEven@_call_0 Bool )
(declare-var printEven@.split_0 Bool )
(declare-var printOdd@%_3_0 Int )
(declare-var printOdd@arg.0_0 Int )
(declare-var printOdd@%_4_0 Bool )
(declare-var printOdd@%_call1_0 Int )
(declare-var printOdd@_call_0 Bool )
(declare-var printOdd@.split_0 Bool )
(declare-var main@%_6_0 Int )
(declare-var main@%_7_0 Int )
(declare-var main@%_37_0 Bool )
(declare-var main@%_39_0 Int )
(declare-var main@%_40_0 Bool )
(declare-var main@%_42_0 Bool )
(declare-var main@%_18_0 Int )
(declare-var main@%_20_0 Bool )
(declare-var main@%_13_0 Int )
(declare-var main@%_14_0 Int )
(declare-var main@%_15_0 Int )
(declare-var main@%_16_0 Bool )
(declare-var main@%_43_0 Int )
(declare-var main@%_44_0 Bool )
(declare-var main@%_46_0 Bool )
(declare-var main@%_32_0 Int )
(declare-var main@%_34_0 Bool )
(declare-var main@%_27_0 Int )
(declare-var main@%_28_0 Int )
(declare-var main@%_29_0 Int )
(declare-var main@%_30_0 Bool )
(declare-var main@%_25_0 Bool )
(declare-var main@%_11_0 Bool )
(declare-var main@%_4_0 Bool )
(declare-var main@%_1_0 Int )
(declare-var main@entry_0 Bool )
(declare-var main@%sm1_0 (Array Int Int) )
(declare-var main@%_0_0 Int )
(declare-var main@%_2_0 Int )
(declare-var main@_bb_0 Bool )
(declare-var main@%shadow.mem.0.0_0 (Array Int Int) )
(declare-var main@%.0.i_0 Int )
(declare-var main@%shadow.mem.0.0_1 (Array Int Int) )
(declare-var main@%.0.i_1 Int )
(declare-var main@_bb2_0 Bool )
(declare-var main@%sm_0 (Array Int Int) )
(declare-var main@%_8_0 Int )
(declare-var main@_bb_1 Bool )
(declare-var main@%shadow.mem.0.0_2 (Array Int Int) )
(declare-var main@%.0.i_2 Int )
(declare-var main@_bb3_0 Bool )
(declare-var main@_bb4_0 Bool )
(declare-var main@%.1.i_0 Int )
(declare-var main@%.1.i_1 Int )
(declare-var main@_bb5_0 Bool )
(declare-var main@_bb6_0 Bool )
(declare-var main@%_19_0 Int )
(declare-var main@postcall_0 Bool )
(declare-var main@_bb7_0 Bool )
(declare-var |tuple(main@_bb5_0, main@_bb7_0)| Bool )
(declare-var main@%_22_0 Int )
(declare-var main@_bb4_1 Bool )
(declare-var main@%.1.i_2 Int )
(declare-var main@_bb8_0 Bool )
(declare-var main@_bb9_0 Bool )
(declare-var main@%.2.i_0 Int )
(declare-var main@%.2.i_1 Int )
(declare-var main@precall_0 Bool )
(declare-var main@printEven_0 Bool )
(declare-var main@%_41_0 Int )
(declare-var main@precall5_0 Bool )
(declare-var main@__JVERIFIER_assert_0 Bool )
(declare-var main@%.0_0 Int )
(declare-var main@%.0_1 Int )
(declare-var main@_bb13_0 Bool )
(declare-var main@verifier.error_0 Bool )
(declare-var main@verifier.error.split_0 Bool )
(declare-var main@_bb10_0 Bool )
(declare-var main@_bb11_0 Bool )
(declare-var main@%_33_0 Int )
(declare-var main@postcall1_0 Bool )
(declare-var main@_bb12_0 Bool )
(declare-var |tuple(main@_bb10_0, main@_bb12_0)| Bool )
(declare-var main@%_36_0 Int )
(declare-var main@_bb9_1 Bool )
(declare-var main@%.2.i_2 Int )
(declare-var main@precall2_0 Bool )
(declare-var main@printOdd_0 Bool )
(declare-var main@%_45_0 Int )
(declare-var main@precall7_0 Bool )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule (__JVERIFIER_assert true true true __JVERIFIER_assert@arg.0_0))
(rule (__JVERIFIER_assert false true true __JVERIFIER_assert@arg.0_0))
(rule (__JVERIFIER_assert false false false __JVERIFIER_assert@arg.0_0))
(rule (__JVERIFIER_assert@_call __JVERIFIER_assert@arg.0_0))
(rule (=> (and (__JVERIFIER_assert@_call __JVERIFIER_assert@arg.0_0)
         true
         (= __JVERIFIER_assert@%_call1_0 (= __JVERIFIER_assert@arg.0_0 0))
         (not __JVERIFIER_assert@%_call1_0)
         (=> __JVERIFIER_assert@_ret_0
             (and __JVERIFIER_assert@_ret_0 __JVERIFIER_assert@_call_0))
         __JVERIFIER_assert@_ret_0)
    (__JVERIFIER_assert@_ret __JVERIFIER_assert@arg.0_0)))
(rule (=> (__JVERIFIER_assert@_ret __JVERIFIER_assert@arg.0_0)
    (__JVERIFIER_assert true false false __JVERIFIER_assert@arg.0_0)))
(rule (printEven true true true printEven@arg.0_0))
(rule (printEven false true true printEven@arg.0_0))
(rule (printEven false false false printEven@arg.0_0))
(rule (printEven@_call printEven@arg.0_0))
(rule (=> (and (printEven@_call printEven@arg.0_0)
         true
         (= printEven@%_3_0 (rem printEven@arg.0_0 2))
         (= printEven@%_4_0 (= printEven@%_3_0 0))
         (= printEven@%_call1_0 (ite printEven@%_4_0 1 0))
         (__JVERIFIER_assert true false false printEven@%_call1_0)
         (=> printEven@.split_0 (and printEven@.split_0 printEven@_call_0))
         printEven@.split_0)
    (printEven@.split printEven@arg.0_0)))
(rule (=> (printEven@.split printEven@arg.0_0)
    (printEven true false false printEven@arg.0_0)))
(rule (printOdd true true true printOdd@arg.0_0))
(rule (printOdd false true true printOdd@arg.0_0))
(rule (printOdd false false false printOdd@arg.0_0))
(rule (printOdd@_call printOdd@arg.0_0))
(rule (let ((a!1 (and (printOdd@_call printOdd@arg.0_0)
                true
                (= printOdd@%_3_0 (rem printOdd@arg.0_0 2))
                (= printOdd@%_4_0 (not (= printOdd@%_3_0 0)))
                (= printOdd@%_call1_0 (ite printOdd@%_4_0 1 0))
                (__JVERIFIER_assert true false false printOdd@%_call1_0)
                (=> printOdd@.split_0 (and printOdd@.split_0 printOdd@_call_0))
                printOdd@.split_0)))
  (=> a!1 (printOdd@.split printOdd@arg.0_0))))
(rule (=> (printOdd@.split printOdd@arg.0_0)
    (printOdd true false false printOdd@arg.0_0)))
(rule main@entry)
(rule (=> (and main@entry
         true
         (> main@%_0_0 0)
         (= main@%_1_0 main@%_0_0)
         (=> main@_bb_0 (and main@_bb_0 main@entry_0))
         (=> (and main@_bb_0 main@entry_0)
             (= main@%shadow.mem.0.0_0 main@%sm1_0))
         (=> (and main@_bb_0 main@entry_0) (= main@%.0.i_0 0))
         (=> (and main@_bb_0 main@entry_0)
             (= main@%shadow.mem.0.0_1 main@%shadow.mem.0.0_0))
         (=> (and main@_bb_0 main@entry_0) (= main@%.0.i_1 main@%.0.i_0))
         main@_bb_0)
    (main@_bb main@%_0_0 main@%.0.i_1 main@%shadow.mem.0.0_1 main@%_2_0)))
(rule (let ((a!1 (=> main@_bb2_0
               (= main@%_7_0 (+ main@%_0_0 (* 0 400000) (* main@%.0.i_0 4))))))
(let ((a!2 (and (main@_bb main@%_0_0
                          main@%.0.i_0
                          main@%shadow.mem.0.0_0
                          main@%_2_0)
                true
                (= main@%_4_0 (< main@%.0.i_0 main@%_2_0))
                (=> main@_bb2_0 (and main@_bb2_0 main@_bb_0))
                (=> (and main@_bb2_0 main@_bb_0) main@%_4_0)
                a!1
                (=> main@_bb2_0 (or (<= main@%_0_0 0) (> main@%_7_0 0)))
                (=> main@_bb2_0 (> main@%_0_0 0))
                (=> main@_bb2_0
                    (= main@%sm_0
                       (store main@%shadow.mem.0.0_0 main@%_7_0 main@%_6_0)))
                (=> main@_bb2_0 (= main@%_8_0 (+ main@%.0.i_0 1)))
                (=> main@_bb_1 (and main@_bb_1 main@_bb2_0))
                (=> (and main@_bb_1 main@_bb2_0)
                    (= main@%shadow.mem.0.0_1 main@%sm_0))
                (=> (and main@_bb_1 main@_bb2_0) (= main@%.0.i_1 main@%_8_0))
                (=> (and main@_bb_1 main@_bb2_0)
                    (= main@%shadow.mem.0.0_2 main@%shadow.mem.0.0_1))
                (=> (and main@_bb_1 main@_bb2_0) (= main@%.0.i_2 main@%.0.i_1))
                main@_bb_1)))
  (=> a!2 (main@_bb main@%_0_0 main@%.0.i_2 main@%shadow.mem.0.0_2 main@%_2_0)))))
(rule (=> (and (main@_bb main@%_0_0 main@%.0.i_0 main@%shadow.mem.0.0_0 main@%_2_0)
         true
         (= main@%_4_0 (< main@%.0.i_0 main@%_2_0))
         (=> main@_bb3_0 (and main@_bb3_0 main@_bb_0))
         (=> (and main@_bb3_0 main@_bb_0) (not main@%_4_0))
         (=> main@_bb4_0 (and main@_bb4_0 main@_bb3_0))
         (=> (and main@_bb4_0 main@_bb3_0) (= main@%.1.i_0 0))
         (=> (and main@_bb4_0 main@_bb3_0) (= main@%.1.i_1 main@%.1.i_0))
         main@_bb4_0)
    (main@_bb4 main@%_0_0 main@%shadow.mem.0.0_0 main@%.1.i_1 main@%_2_0)))
(rule (let ((a!1 (=> main@_bb5_0
               (= main@%_13_0 (+ main@%_0_0 (* 0 400000) (* main@%.1.i_0 4)))))
      (a!2 (=> main@_bb6_0
               (= main@%_18_0 (+ main@%_0_0 (* 0 400000) (* main@%.1.i_0 4))))))
(let ((a!3 (and (main@_bb4 main@%_0_0
                           main@%shadow.mem.0.0_0
                           main@%.1.i_0
                           main@%_2_0)
                true
                (= main@%_11_0 (< main@%.1.i_0 main@%_2_0))
                (=> main@_bb5_0 (and main@_bb5_0 main@_bb4_0))
                (=> (and main@_bb5_0 main@_bb4_0) main@%_11_0)
                a!1
                (=> main@_bb5_0 (or (<= main@%_0_0 0) (> main@%_13_0 0)))
                (=> main@_bb5_0 (> main@%_0_0 0))
                (=> main@_bb5_0
                    (= main@%_14_0 (select main@%shadow.mem.0.0_0 main@%_13_0)))
                (=> main@_bb5_0 (= main@%_15_0 (rem main@%_14_0 2)))
                (=> main@_bb5_0 (= main@%_16_0 (= main@%_15_0 0)))
                (=> main@_bb6_0 (and main@_bb6_0 main@_bb5_0))
                (=> (and main@_bb6_0 main@_bb5_0) main@%_16_0)
                a!2
                (=> main@_bb6_0 (or (<= main@%_0_0 0) (> main@%_18_0 0)))
                (=> main@_bb6_0 (> main@%_0_0 0))
                (=> main@_bb6_0
                    (= main@%_19_0 (select main@%shadow.mem.0.0_0 main@%_18_0)))
                (=> main@postcall_0 (and main@postcall_0 main@_bb6_0))
                (=> (and main@postcall_0 main@_bb6_0) main@%_20_0)
                (printEven main@postcall_0 false false main@%_19_0)
                (=> |tuple(main@_bb5_0, main@_bb7_0)| main@_bb5_0)
                (=> main@_bb7_0
                    (or (and main@_bb7_0 main@postcall_0)
                        |tuple(main@_bb5_0, main@_bb7_0)|))
                (=> |tuple(main@_bb5_0, main@_bb7_0)| (not main@%_16_0))
                (=> main@_bb7_0 (= main@%_22_0 (+ main@%.1.i_0 1)))
                (=> main@_bb4_1 (and main@_bb4_1 main@_bb7_0))
                (=> (and main@_bb4_1 main@_bb7_0) (= main@%.1.i_1 main@%_22_0))
                (=> (and main@_bb4_1 main@_bb7_0) (= main@%.1.i_2 main@%.1.i_1))
                main@_bb4_1)))
  (=> a!3 (main@_bb4 main@%_0_0 main@%shadow.mem.0.0_0 main@%.1.i_2 main@%_2_0)))))
(rule (=> (and (main@_bb4 main@%_0_0 main@%shadow.mem.0.0_0 main@%.1.i_0 main@%_2_0)
         true
         (= main@%_11_0 (< main@%.1.i_0 main@%_2_0))
         (=> main@_bb8_0 (and main@_bb8_0 main@_bb4_0))
         (=> (and main@_bb8_0 main@_bb4_0) (not main@%_11_0))
         (=> main@_bb9_0 (and main@_bb9_0 main@_bb8_0))
         (=> (and main@_bb9_0 main@_bb8_0) (= main@%.2.i_0 0))
         (=> (and main@_bb9_0 main@_bb8_0) (= main@%.2.i_1 main@%.2.i_0))
         main@_bb9_0)
    (main@_bb9 main@%_0_0 main@%shadow.mem.0.0_0 main@%.2.i_1 main@%_2_0)))
(rule (let ((a!1 (=> main@_bb5_0
               (= main@%_13_0 (+ main@%_0_0 (* 0 400000) (* main@%.1.i_0 4)))))
      (a!2 (=> main@_bb6_0
               (= main@%_18_0 (+ main@%_0_0 (* 0 400000) (* main@%.1.i_0 4))))))
(let ((a!3 (and (main@_bb4 main@%_0_0
                           main@%shadow.mem.0.0_0
                           main@%.1.i_0
                           main@%_2_0)
                true
                (= main@%_11_0 (< main@%.1.i_0 main@%_2_0))
                (=> main@_bb5_0 (and main@_bb5_0 main@_bb4_0))
                (=> (and main@_bb5_0 main@_bb4_0) main@%_11_0)
                a!1
                (=> main@_bb5_0 (or (<= main@%_0_0 0) (> main@%_13_0 0)))
                (=> main@_bb5_0 (> main@%_0_0 0))
                (=> main@_bb5_0
                    (= main@%_14_0 (select main@%shadow.mem.0.0_0 main@%_13_0)))
                (=> main@_bb5_0 (= main@%_15_0 (rem main@%_14_0 2)))
                (=> main@_bb5_0 (= main@%_16_0 (= main@%_15_0 0)))
                (=> main@_bb6_0 (and main@_bb6_0 main@_bb5_0))
                (=> (and main@_bb6_0 main@_bb5_0) main@%_16_0)
                a!2
                (=> main@_bb6_0 (or (<= main@%_0_0 0) (> main@%_18_0 0)))
                (=> main@_bb6_0 (> main@%_0_0 0))
                (=> main@_bb6_0
                    (= main@%_19_0 (select main@%shadow.mem.0.0_0 main@%_18_0)))
                (=> main@precall_0 (and main@precall_0 main@_bb6_0))
                (=> (and main@precall_0 main@_bb6_0) (not main@%_20_0))
                (=> main@printEven_0 (and main@printEven_0 main@precall_0))
                (=> main@printEven_0 (= main@%_39_0 (rem main@%_19_0 2)))
                (=> main@printEven_0 (= main@%_40_0 (= main@%_39_0 0)))
                (=> main@printEven_0 (= main@%_41_0 (ite main@%_40_0 1 0)))
                (=> main@printEven_0 (not main@%_42_0))
                (=> main@precall5_0 (and main@precall5_0 main@printEven_0))
                (=> main@__JVERIFIER_assert_0
                    (and main@__JVERIFIER_assert_0 main@precall5_0))
                (=> (and main@__JVERIFIER_assert_0 main@precall5_0)
                    (= main@%.0_0 main@%_41_0))
                (=> (and main@__JVERIFIER_assert_0 main@precall5_0)
                    (= main@%.0_1 main@%.0_0))
                (=> main@__JVERIFIER_assert_0 (= main@%_37_0 (= main@%.0_1 0)))
                (=> main@__JVERIFIER_assert_0 main@%_37_0)
                (=> main@_bb13_0 (and main@_bb13_0 main@__JVERIFIER_assert_0))
                (=> main@verifier.error_0
                    (and main@verifier.error_0 main@_bb13_0))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!3 main@verifier.error.split))))
(rule (let ((a!1 (=> main@_bb10_0
               (= main@%_27_0 (+ main@%_0_0 (* 0 400000) (* main@%.2.i_0 4)))))
      (a!2 (=> main@_bb11_0
               (= main@%_32_0 (+ main@%_0_0 (* 0 400000) (* main@%.2.i_0 4))))))
(let ((a!3 (and (main@_bb9 main@%_0_0
                           main@%shadow.mem.0.0_0
                           main@%.2.i_0
                           main@%_2_0)
                true
                (= main@%_25_0 (< main@%.2.i_0 main@%_2_0))
                main@%_25_0
                (=> main@_bb10_0 (and main@_bb10_0 main@_bb9_0))
                a!1
                (=> main@_bb10_0 (or (<= main@%_0_0 0) (> main@%_27_0 0)))
                (=> main@_bb10_0 (> main@%_0_0 0))
                (=> main@_bb10_0
                    (= main@%_28_0 (select main@%shadow.mem.0.0_0 main@%_27_0)))
                (=> main@_bb10_0 (= main@%_29_0 (rem main@%_28_0 2)))
                (=> main@_bb10_0 (= main@%_30_0 (= main@%_29_0 0)))
                (=> main@_bb11_0 (and main@_bb11_0 main@_bb10_0))
                (=> (and main@_bb11_0 main@_bb10_0) (not main@%_30_0))
                a!2
                (=> main@_bb11_0 (or (<= main@%_0_0 0) (> main@%_32_0 0)))
                (=> main@_bb11_0 (> main@%_0_0 0))
                (=> main@_bb11_0
                    (= main@%_33_0 (select main@%shadow.mem.0.0_0 main@%_32_0)))
                (=> main@postcall1_0 (and main@postcall1_0 main@_bb11_0))
                (=> (and main@postcall1_0 main@_bb11_0) main@%_34_0)
                (printOdd main@postcall1_0 false false main@%_33_0)
                (=> |tuple(main@_bb10_0, main@_bb12_0)| main@_bb10_0)
                (=> main@_bb12_0
                    (or (and main@_bb12_0 main@postcall1_0)
                        |tuple(main@_bb10_0, main@_bb12_0)|))
                (=> |tuple(main@_bb10_0, main@_bb12_0)| main@%_30_0)
                (=> main@_bb12_0 (= main@%_36_0 (+ main@%.2.i_0 1)))
                (=> main@_bb9_1 (and main@_bb9_1 main@_bb12_0))
                (=> (and main@_bb9_1 main@_bb12_0) (= main@%.2.i_1 main@%_36_0))
                (=> (and main@_bb9_1 main@_bb12_0)
                    (= main@%.2.i_2 main@%.2.i_1))
                main@_bb9_1)))
  (=> a!3 (main@_bb9 main@%_0_0 main@%shadow.mem.0.0_0 main@%.2.i_2 main@%_2_0)))))
(rule (let ((a!1 (=> main@_bb10_0
               (= main@%_27_0 (+ main@%_0_0 (* 0 400000) (* main@%.2.i_0 4)))))
      (a!2 (=> main@_bb11_0
               (= main@%_32_0 (+ main@%_0_0 (* 0 400000) (* main@%.2.i_0 4)))))
      (a!3 (=> main@printOdd_0 (= main@%_44_0 (not (= main@%_43_0 0))))))
(let ((a!4 (and (main@_bb9 main@%_0_0
                           main@%shadow.mem.0.0_0
                           main@%.2.i_0
                           main@%_2_0)
                true
                (= main@%_25_0 (< main@%.2.i_0 main@%_2_0))
                main@%_25_0
                (=> main@_bb10_0 (and main@_bb10_0 main@_bb9_0))
                a!1
                (=> main@_bb10_0 (or (<= main@%_0_0 0) (> main@%_27_0 0)))
                (=> main@_bb10_0 (> main@%_0_0 0))
                (=> main@_bb10_0
                    (= main@%_28_0 (select main@%shadow.mem.0.0_0 main@%_27_0)))
                (=> main@_bb10_0 (= main@%_29_0 (rem main@%_28_0 2)))
                (=> main@_bb10_0 (= main@%_30_0 (= main@%_29_0 0)))
                (=> main@_bb11_0 (and main@_bb11_0 main@_bb10_0))
                (=> (and main@_bb11_0 main@_bb10_0) (not main@%_30_0))
                a!2
                (=> main@_bb11_0 (or (<= main@%_0_0 0) (> main@%_32_0 0)))
                (=> main@_bb11_0 (> main@%_0_0 0))
                (=> main@_bb11_0
                    (= main@%_33_0 (select main@%shadow.mem.0.0_0 main@%_32_0)))
                (=> main@precall2_0 (and main@precall2_0 main@_bb11_0))
                (=> (and main@precall2_0 main@_bb11_0) (not main@%_34_0))
                (=> main@printOdd_0 (and main@printOdd_0 main@precall2_0))
                (=> main@printOdd_0 (= main@%_43_0 (rem main@%_33_0 2)))
                a!3
                (=> main@printOdd_0 (= main@%_45_0 (ite main@%_44_0 1 0)))
                (=> main@printOdd_0 (not main@%_46_0))
                (=> main@precall7_0 (and main@precall7_0 main@printOdd_0))
                (=> main@__JVERIFIER_assert_0
                    (and main@__JVERIFIER_assert_0 main@precall7_0))
                (=> (and main@__JVERIFIER_assert_0 main@precall7_0)
                    (= main@%.0_0 main@%_45_0))
                (=> (and main@__JVERIFIER_assert_0 main@precall7_0)
                    (= main@%.0_1 main@%.0_0))
                (=> main@__JVERIFIER_assert_0 (= main@%_37_0 (= main@%.0_1 0)))
                (=> main@__JVERIFIER_assert_0 main@%_37_0)
                (=> main@_bb13_0 (and main@_bb13_0 main@__JVERIFIER_assert_0))
                (=> main@verifier.error_0
                    (and main@verifier.error_0 main@_bb13_0))
                (=> main@verifier.error.split_0
                    (and main@verifier.error.split_0 main@verifier.error_0))
                main@verifier.error.split_0)))
  (=> a!4 main@verifier.error.split))))
(query main@verifier.error.split)

